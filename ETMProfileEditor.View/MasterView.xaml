<UserControl x:Class="ETMProfileEditor.View.MasterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ETMProfileEditor.View"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:jas="clr-namespace:WPF.JoshSmith.ServiceProviders.UI;assembly=ListViewDragDropManager"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <!--d:DataContext="{d:DesignInstance design:BetEditorDesign,
                                              IsDesignTimeCreatable=True}"-->
    <DockPanel x:Name="DockPanel">
        <DockPanel.Resources>

            <Style TargetType="{x:Type Button}" x:Key="B">
                <Setter Property="Height" Value="100" />
                <Setter Property="Width" Value="100" />
                <!--<Setter Property="Margin" Value="16" />-->
            </Style>

            <Style x:Key="ItemContStyle" TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                <Style.Resources>
                    <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                        <GradientStop Color="#22000000" Offset="0" />
                        <GradientStop Color="#44000000" Offset="0.4" />
                        <GradientStop Color="#55000000" Offset="0.6" />
                        <GradientStop Color="#33000000" Offset="0.9" />
                        <GradientStop Color="#22000000" Offset="1" />
                    </LinearGradientBrush>
                </Style.Resources>
                <Setter Property="Padding" Value="0,4" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <!-- The default control template for ListViewItem has a Border
           which contains the item's content. -->
                <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
                <Setter Property="Border.BorderBrush" Value="LightGray" />
                <!-- These triggers react to changes in the attached properties set
           during a managed drag-drop operation. -->
                <Style.Triggers>
                    <Trigger Property="jas:ListViewItemDragState.IsBeingDragged" Value="True">
                        <Setter Property="FontWeight" Value="DemiBold" />
                    </Trigger>
                    <Trigger Property="jas:ListViewItemDragState.IsUnderDragCursor" Value="True">
                        <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <CollectionViewSource Source="{Binding Objects, Mode=OneWay}"
                                  x:Key="collectionView"
                                  IsLiveSortingRequested="True">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Index" Direction="Ascending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <local:CountConverter x:Key="CountConverter" Invert="True"></local:CountConverter>
        </DockPanel.Resources>

        <ToolBar DockPanel.Dock="Bottom" Height="100" x:Name="ToolBar1">

            <materialDesign:PopupBox Background="Transparent"
                                     Height="100"
                                     Width="100">
                <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon Kind="Add" />
                </materialDesign:PopupBox.ToggleContent>
                <ItemsControl ItemsSource="{Binding Types}"   VerticalContentAlignment="Top" VerticalAlignment="Top">
                    <ItemsControl.Resources>
                        <local:TypeNameConverter x:Key="TypeNameConverter"></local:TypeNameConverter>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Click="Button_Click"
                                    Width="150"
                                    Background="Transparent"
                                    Content="{Binding Converter={StaticResource TypeNameConverter}}">
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel ></WrapPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </materialDesign:PopupBox>

            <Button Click="Remove_Click" Style="{StaticResource B}"
                    IsEnabled="{Binding Objects, Converter={StaticResource CountConverter}, ConverterParameter=0}">
                <materialDesign:PackIcon Kind="Remove" />
            </Button>
            <Button Click="Up_Click" Style="{StaticResource B}" IsEnabled="{Binding Objects, Converter={StaticResource CountConverter}, ConverterParameter=1}">
                <materialDesign:PackIcon Kind="ArrowUp" />
            </Button>
            <Button Click="Down_Click" Style="{StaticResource B}"  IsEnabled="{Binding Objects, Converter={StaticResource CountConverter}, ConverterParameter=1}">
                <materialDesign:PackIcon Kind="ArrowDown" />
            </Button>
        </ToolBar>
        <ListView AllowDrop="True" DockPanel.Dock="Top"
                  ItemsSource="{Binding Source={StaticResource collectionView}, Mode=OneWay}"
                  ItemContainerStyle="{StaticResource ItemContStyle}"
                 x:Name="ListView"
                  SelectedIndex="0"
                  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                   MinWidth="200">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Remove">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding RemoveItemCommand }" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding Index}"></TextBlock>
                        <ContentPresenter Content="{Binding Value}"
                                          ContentTemplate="{Binding DataContext.ItemTemplate, RelativeSource={RelativeSource AncestorType=ListView}}">
                        </ContentPresenter>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </DockPanel>
</UserControl>