<UserControl x:Class="ETMProfileEditor.View.RepositoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ETMProfileEditor.View"
             xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             d:DataContext="{d:DesignInstance local:RepositoryViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
       
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:PropertyConverter x:Key="PropertyConverter" ></local:PropertyConverter>
    </UserControl.Resources>
    <Grid x:Name="Grid">
        <Grid.RowDefinitions>
   
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <!--<RowDefinition Height="300"></RowDefinition>-->
        </Grid.RowDefinitions>

        <materialDesign:DialogHost Grid.Row="0" DialogClosing="Sample1_DialogHost_OnDialogClosing" HorizontalAlignment="Center" VerticalAlignment="Center">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="DialogClosing">
                    <i:InvokeCommandAction Command="{Binding AddCommand}" 
                                           PassEventArgsToCommand="True"
                                           EventArgsConverter="{StaticResource PropertyConverter}"
                                           EventArgsConverterParameter="Parameter"    />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <materialDesign:DialogHost.DialogContent>
                <StackPanel Margin="16">
                    <TextBlock>Add a new Profile.</TextBlock>
                    <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" x:Name="FruitTextBox" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding NameChangedCommand}" 
                                           CommandParameter="{Binding ElementName=FruitTextBox, Path=Text}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                        
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                            <Button.CommandParameter>
                                <system:Boolean>True</system:Boolean>
                            </Button.CommandParameter>
                            ACCEPT
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsCancel="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                            <Button.CommandParameter>
                                <system:Boolean>False</system:Boolean>
                            </Button.CommandParameter>
                            CANCEL
                        </Button>
                    </StackPanel>
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>



                <Grid Grid.Row="0"                    >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ItemsControl ItemsSource="{Binding Items, Mode=OneTime}" x:Name="LBox"  Grid.Column="0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                
                                    <materialDesign:Chip Content="{Binding Value}"
                                             Background="Transparent"
                                 IsDeletable="True"
                                 x:Name="ButtonsDemoChip"
                                 Click="ButtonsDemoChip_OnClick"
                                 DeleteClick="ButtonsDemoChip_OnDeleteClick"
                                 ToolTip="Delete a Profile"
                                 DeleteToolTip="Delete">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding SelectCommand}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="DeleteClick">
                                                <i:InvokeCommandAction Command="{Binding DeleteCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <materialDesign:Chip.Icon>
                                            <ContentControl>
                                                <ContentControl.Content>
                                                    <materialDesign:PackIcon Kind="Stairs" />
                                                </ContentControl.Content>
                                                <ContentControl.Style>
                                                    <Style TargetType="{x:Type ContentControl}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Select.Value, Mode=OneWay}" Value="False">
                                                                <Setter Property="Opacity" Value="0.5"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                        </materialDesign:Chip.Icon>
                                    </materialDesign:Chip>
                             
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel></WrapPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>

                   
                        <Button  Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    VerticalAlignment="Center" HorizontalAlignment="Right" 
                                    Grid.Row="0" >
                            <materialDesign:PackIcon Kind="Plus" Height="22" Width="22"/>
                        </Button>
                
                  
                </Grid>
        
        </materialDesign:DialogHost>

     
        <!--</Expander>-->
        <Grid Grid.Row="1" >
            <Grid.Resources>
                <local:TypeNameConverter x:Key="Converter"></local:TypeNameConverter>
            </Grid.Resources>
            <!--<Grid.Background>
                <SolidColorBrush Color="{StaticResource Primary500}" />
            </Grid.Background>-->

            <ContentPresenter Content="{Binding SelectedItem.Value.Value}"  x:Name="ContentPresenter1">

            </ContentPresenter>
        </Grid>


        <!-- example 2 -->
        <Border Background="{DynamicResource MaterialDesignPaper}" 
                    
                     Grid.Row="2">
            <!--Padding="8 0 8 0"-->
            <Grid>
                <!--<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    -->
                <!--<TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 2.</TextBlock>
                    <TextBlock TextWrapping="WrapWithOverflow" >View source to see message defined in long hand, allowing action button content to be set.</TextBlock>-->
                <!--
                    <ToggleButton IsChecked="{Binding ElementName=SnackbarTwo, Path=IsActive, Mode=TwoWay}"
                                      Margin="0 8 0 0" />
                </StackPanel>-->

                <smtx:XamlDisplay Key="snackbar_2">
                    <!-- long hand form for setting the message -->
                    <materialDesign:Snackbar IsActive="False" x:Name="SnackbarTwo" >
                        <materialDesign:SnackbarMessage Content="Message Deleted" ActionContent="UNDO" ActionClick="Undo_Click" ActionCommand="{Binding UndoCommand}"/>
                    </materialDesign:Snackbar>
                </smtx:XamlDisplay>
            </Grid>
        </Border>
    </Grid>

</UserControl>
